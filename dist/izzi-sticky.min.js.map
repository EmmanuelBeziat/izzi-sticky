{"version":3,"sources":["izzi-sticky.js"],"names":["root","factory","define","amd","module","exports","IzziSticky","this","el","options","stickApply","element","classList","add","self","classIsSticky","onStick","stickRemove","remove","onUnstick","build","sticky","window","addEventListener","hasStickyClass","contains","pageYOffset","heightValue","Object","create","prototype","keys","forEach","key","document","querySelector","Error","init","call"],"mappings":";;;;;;CAOC,SAAUA,EAAMC,GACM,kBAAXC,SAAyBA,OAAOC,IAE1CD,UAAWD,GACiB,gBAAXG,SAAuBA,OAAOC,QAI/CD,OAAOC,QAAUJ,IAGjBD,EAAKM,WAAaL,KAElBM,KAAM,WACP,GAAID,GAAa,SAAUE,EAAIC,GAC9B,YAgDA,SAASC,GAAWC,GACnBA,EAAQC,UAAUC,IAAIC,EAAKL,QAAQM,eAG/B,kBAAsBD,GAAKL,QAAQO,SACtCF,EAAKL,QAAQO,UAQf,QAASC,GAAYN,GACpBA,EAAQC,UAAUM,OAAOJ,EAAKL,QAAQM,eAGlC,kBAAsBD,GAAKL,QAAQU,WACtCL,EAAKL,QAAQU,YASf,QAASC,KACJN,EAAKO,QACRC,OAAOC,iBAAiB,SAAU,WACjC,GAAIC,GAAiBV,EAAKO,OAAOT,UAAUa,SAASX,EAAKL,QAAQM,cAE7DO,QAAOI,aAAeZ,EAAKL,QAAQkB,cAAgBH,EACtDd,EAAWI,EAAKO,QAERC,OAAOI,YAAcZ,EAAKL,QAAQkB,aAAeH,GACzDP,EAAYH,EAAKO,UAlFrB,GAAIP,GAAOc,OAAOC,OAAOvB,EAAWwB,UA4BpC,IAvBAhB,EAAKL,SACJkB,YAAa,EACbZ,cAAe,YACfC,QAAS,KACTG,UAAW,MAMRV,GACHmB,OAAOG,KAAKtB,GAASuB,QAAQ,SAAUC,GACtCnB,EAAKL,QAAQwB,GAAOxB,EAAQwB,KAOzBzB,IACJM,EAAKO,OAASa,SAASC,cAAc,kBAGlC3B,GAAM,gBAAoBA,GAC7BM,EAAKO,OAASa,SAASC,cAAc3B,OAEjC,CAAA,IAAIA,GAAM,gBAAoBA,GAIlC,KAAM,IAAI4B,OAAM,qDAHhBtB,GAAKO,OAASb,EAMf,GAAI6B,GAAO,WACVjB,EAAMkB,KAAK/B,MAmDZ,OADA8B,KACOvB,EAER,OAAOR","file":"../js/izzi-sticky.min.js","sourcesContent":["/*!\r\n * A lightweight and simple plugin to have sticky stuff.\r\n * Version : 2.0.1\r\n * Emmanuel B. (www.emmanuelbeziat.com)\r\n * https://github.com/EmmanuelBeziat/js-izzi-sticky\r\n **/\r\n\r\n(function (root, factory) {\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine([], factory);\r\n\t} else if (typeof module === 'object' && module.exports) {\r\n\t\t// Node. Does not work with strict CommonJS, but\r\n\t\t// only CommonJS-like environments that support module.exports,\r\n\t\t// like Node.\r\n\t\tmodule.exports = factory();\r\n\t} else {\r\n\t\t// Browser globals (root is window)\r\n\t\troot.IzziSticky = factory();\r\n\t}\r\n}(this, function () {\r\n\tvar IzziSticky = function (el, options){\r\n\t\t'use strict';\r\n\r\n\t\tvar self = Object.create(IzziSticky.prototype);\r\n\r\n\t\t/**\r\n\t\t * Default settings\r\n\t\t */\r\n\t\tself.options = {\r\n\t\t\theightValue: 0,\r\n\t\t\tclassIsSticky: 'is-sticky',\r\n\t\t\tonStick: null,\r\n\t\t\tonUnstick: null\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * User defined options\r\n\t\t */\r\n\t\tif (options) {\r\n\t\t\tObject.keys(options).forEach(function (key){\r\n\t\t\t\tself.options[key] = options[key];\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * By default, search for an item with 'data-sticky' attribute\r\n\t\t */\r\n\t\tif (!el) {\r\n\t\t\tself.sticky = document.querySelector('[data-sticky]');\r\n\t\t}\r\n\r\n\t\tif (el && 'string' === typeof el) {\r\n\t\t\tself.sticky = document.querySelector(el);\r\n\t\t}\r\n\t\telse if (el && 'object' === typeof el) {\r\n\t\t\tself.sticky = el;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error('[IzziSticky] Unable to get a valid object to stick');\r\n\t\t}\r\n\r\n\t\tvar init = function () {\r\n\t\t\tbuild.call(this);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Add classe on the sticky element\r\n\t\t * Allow callback onStick\r\n\t\t */\r\n\t\tfunction stickApply(element) {\r\n\t\t\telement.classList.add(self.options.classIsSticky);\r\n\r\n\t\t\t// callback\r\n\t\t\tif ('function' === typeof self.options.onStick) {\r\n\t\t\t\tself.options.onStick();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Remove classes on the sticky element\r\n\t\t * Allow callback onUnstick\r\n\t\t */\r\n\t\tfunction stickRemove(element) {\r\n\t\t\telement.classList.remove(self.options.classIsSticky);\r\n\r\n\t\t\t// callback\r\n\t\t\tif ('function' === typeof self.options.onUnstick) {\r\n\t\t\t\tself.options.onUnstick();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Main build function\r\n\t\t * 1. Add the content class when loading, if the input's value is already defined\r\n\t\t * 2. Fire events when focus and blur happen\r\n\t\t */\r\n\t\tfunction build() {\r\n\t\t\tif (self.sticky) {\r\n\t\t\t\twindow.addEventListener('scroll', function() {\r\n\t\t\t\t\tvar hasStickyClass = self.sticky.classList.contains(self.options.classIsSticky);\r\n\r\n\t\t\t\t\tif (window.pageYOffset >= self.options.heightValue && !hasStickyClass) {\r\n\t\t\t\t\t\tstickApply(self.sticky);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (window.pageYOffset < self.options.heightValue && hasStickyClass) {\r\n\t\t\t\t\t\tstickRemove(self.sticky);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tinit();\r\n\t\treturn self;\r\n\t};\r\n\treturn IzziSticky;\r\n}));"]}